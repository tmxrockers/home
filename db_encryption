
GRANT EXECUTE ON DBMS_CRYPTO TO C##GRM_DEV;

https://stackoverflow.com/questions/36938531/grant-permission-for-dbms-crypto
https://stackoverflow.com/questions/32472691/how-to-use-dbms-crypto-encrypt-function-in-oracle?rq=4


CREATE TABLE data_table (
    id NUMBER PRIMARY KEY,
    original_data VARCHAR2(100),
    encrypted_data RAW(128)
);

-- Insert some sample data
INSERT INTO data_table (id, original_data)
VALUES (1, 'Sensitive Data to be Encrypted');


CREATE OR REPLACE FUNCTION encrypt_data(p_data VARCHAR2)
RETURN RAW
AS
    l_encrypted_data RAW(2000);
BEGIN
    l_encrypted_data := DBMS_CRYPTO.ENCRYPT(
                           UTL_I18N.STRING_TO_RAW(p_data, 'AL32UTF8'),
                           4353,
                           UTL_RAW.CAST_TO_RAW('SecretKey') -- Ensure the key is 16 bytes (128 bits) for AES128
                       );
    RETURN l_encrypted_data;
END encrypt_data;
/

CREATE OR REPLACE FUNCTION decrypt_data(p_encrypted_data RAW)
RETURN VARCHAR2
AS
    l_decrypted_data RAW(2000);
BEGIN
    l_decrypted_data := DBMS_CRYPTO.DECRYPT(
                           p_encrypted_data,
                           4353,
                           UTL_RAW.CAST_TO_RAW('SecretKey') -- Ensure the key is 16 bytes (128 bits) for AES128
                       );

    -- Convert the decrypted RAW data to a VARCHAR2 using the appropriate character set
    RETURN UTL_I18N.RAW_TO_CHAR(l_decrypted_data, 'AL32UTF8');
END decrypt_data;
/

-- Update data_table with encrypted data
UPDATE data_table
SET encrypted_data = encrypt_data(original_data);

-- Query data_table with decrypted data
SELECT original_data, encrypted_data, decrypt_data(encrypted_data) AS decrypted_data
FROM data_table;




ORIGINAL_DATA                 |ENCRYPTED_DATA                  |DECRYPTED_DATA                |
------------------------------+--------------------------------+------------------------------+
Sensitive Data to be Encrypted|!é ôÒ ½ i-è ò`¡¢JÞ   ú µôZ<ù(³ªm|Sensitive Data to be Encrypted|


