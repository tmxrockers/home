Analysis Document: HRCI Freeform Text Issue
1. HRCI Freeform Text Issue Details
1.1. Problem Statement
In GBS managed Applications, a critical issue has been identified where Highly Regulated Confidential Information (HRCI) data, including credit card numbers and Social Security Numbers (SSN), is being stored in freeform text fields without the necessary masking or encryption. This practice violates both the GIS data classification policy and the Payment Card Industry Data Security Standard (PCI DSS) for secure data storage. The Data Protection and Privacy (DPAP) team initiated an epicenter scan through the Free Form Text (FFT) program, revealing instances of HRCI data storage without proper protection. Subsequently, a Request for Information Security Enhancement (RISE) has been raised, categorizing the severity of the issue as level 3.

1.2. Detailed Analysis
A comprehensive review has been conducted, identifying a total of 77 freeform text components within GRM applications that are affected by this issue. These components are further categorized into 53 freeform text master configurations and 24 freeform text staffing transactions. For specific details on the affected components, please refer to the attached GRM Freeform Text Component list.

2. HRCI Data for Remediation
To address the HRCI data exposure, the remediation process must cover the following types of sensitive information:

2.1. Social Security Number (SSN)
The SSN must adhere to the format of a number with a 3-2-4 digit structure, separated by spaces or hyphens, and totaling 9 digits in length.

2.2. Credit Card Number
Credit card numbers should follow specific formats:

xxxx xxxxxxx xxxx with spaces
XXXX XXXXXXX XXXxx with spaces
XXXX XXXX XXXX Xxxx with spaces
Additionally, credit card numbers may be formatted with or without spaces and must fall within the range of 14 to 16 digits.

2.3. Account Number
Account numbers should consist of 5 to 12 digits without any spaces or special characters.

3. HRCI Freeform Text Remediation Approach
3.1. UI Validation and Masking
A user interface (UI) validation and masking mechanism will be implemented. If a user inputs Non-Public Information (NPI) data into a freeform text field and attempts to save without proper masking, a popup dialog will appear. This dialog serves as a confirmation prompt, asking the user to acknowledge whether the entered information is sensitive/NPI.


Objective
Implement a secure approach for handling Highly Regulated Confidential Information (HRCI) data within freeform text fields. The plan emphasizes UI validation and masking without the need for encryption.

Implementation Steps
UI Validation:

Integrate a robust UI validation mechanism for freeform text fields.
Trigger validation when a user attempts to save or submit a form.
Masking Dialogue Box:

Prompt users with a dialogue box upon detecting sensitive information.
Request user acknowledgment regarding the sensitivity of the entered data.
Masking Scenarios:

Sensitive Data Detected:
Prompt masking confirmation.
Allow user acknowledgment for masking.
Non-Sensitive Data Entered:
Proceed without masking upon user confirmation.
Integration with UI Framework:

Integrate the UI validation and masking logic with the existing UI framework.
Dialogue Box Implementation:

Create a dialogue box component for displaying masking confirmations.
Event Triggers:

Define event triggers to initiate UI validation and masking on user interactions.
Testing
Conduct thorough testing of the UI validation and masking process:

Test scenarios with both sensitive and non-sensitive data inputs.
User Training
Provide clear documentation and training materials for end-users:

Explain the masking process and the importance of acknowledging sensitive information.
Monitoring and Maintenance
Implement monitoring mechanisms:

Track user interactions to assess the effectiveness of UI validation and masking.
Regularly update and maintain the system to adapt to changes in requirements or technology.
This streamlined plan provides a clear roadmap for implementing UI validation and masking in freeform text fields, ensuring the secure handling of sensitive information without encryption.


Encryption and Decryption Strategy for Freeform Text Fields
Objective
Design a secure approach for handling sensitive information, particularly Non-Public Information (NPI), within freeform text fields, considering the complexity associated with encrypting and decrypting longer comments. Additionally, address the absence of fields dedicated to SSN, Credit Card, or Account Numbers in GRM applications.

1. NPI Data in Freeform Text
Input Handling:

Users can input NPI data along with random text in freeform text fields.
Encryption:

Encrypt the entire content when storing in the database.
Decryption:

Decrypt the data during retrieval.
Considerations:

Recognize the complexity of encrypting and decrypting comments, especially when they can reach up to 4000 characters.
2. Dedicated Fields for SSN/Credit Card/Account Numbers
Data Type Restriction:

Although GRM applications don't store SSN, Credit Card, or Account Numbers, if these dedicated fields are introduced in the future, implement encryption and decryption for these specific data types.
Encryption/Decryption Process:

Encrypt and decrypt SSN, Credit Card, or Account Numbers using standard cryptographic algorithms.
Benefits and Considerations
Balancing Security and Complexity:

Encrypting entire freeform text provides security but may introduce complexity for longer comments. However, it remains a viable approach.
Adaptability for Future Changes:

The plan allows for easy integration of encryption for dedicated fields if GRM applications decide to store SSN, Credit Card, or Account Numbers.
Efficiency in Current Scenario:

Acknowledging the absence of such data types in the current system, no encryption/decryption processes are applied, ensuring system efficiency.
Conclusion
This strategy strikes a balance between securing sensitive data in freeform text fields and minimizing complexity. While recognizing the potential challenges of encrypting longer comments, the plan remains adaptable to future changes, providing a secure and efficient solution for the current state of GRM applications.
