import pandas as pd

def mask_excel_data(input_file, output_file, columns_to_mask, header_row):
    # Load the entire Excel file with no headers to preserve the structure
    full_df = pd.read_excel(input_file, header=None)

    # Extract the actual data starting from the header row
    data_df = pd.read_excel(input_file, header=header_row)

    # Mask the specified columns
    for column in columns_to_mask:
        if column in data_df.columns:
            # Replace data with asterisks if the cell is not empty
            data_df[column] = data_df[column].apply(
                lambda x: '*' * len(str(x)) if pd.notna(x) and str(x).strip() else x
            )
        else:
            print(f"Column '{column}' not found in the Excel file.")

    # Replace the data in the original structure
    full_df.iloc[header_row + 1:, :] = data_df.values

    # Save the modified data to a new Excel file
    full_df.to_excel(output_file, index=False, header=False)
    print(f"Masked data saved to {output_file}")

# Input file name
input_file = "input_data.xlsx"

# Output file name
output_file = "masked_data.xlsx"

# Columns to mask
columns_to_mask = ["Name", "Email", "Phone"]  # Replace with the columns you want to mask

# Header row (0-indexed, e.g., 1 means second row)
header_row = 1

# Call the function
mask_excel_data(input_file, output_file, columns_to_mask, header_row)







import openpyxl

def mask_excel_data_with_style(input_file, output_file, columns_to_mask, header_row):
    # Load the workbook
    wb = openpyxl.load_workbook(input_file)
    sheet = wb.active  # Use the first sheet by default; adjust if needed

    # Get column indices for columns to mask
    headers = [cell.value for cell in sheet[header_row + 1]]  # Header row is 1-indexed
    column_indices_to_mask = [headers.index(col) + 1 for col in columns_to_mask if col in headers]

    if not column_indices_to_mask:
        print("No matching columns found to mask.")
        return

    # Mask data while preserving formatting
    for row in sheet.iter_rows(min_row=header_row + 2):  # Data starts after the header row
        for col_idx in column_indices_to_mask:
            cell = row[col_idx - 1]  # openpyxl uses 0-based indexing internally
            if cell.value and isinstance(cell.value, str):  # Mask only non-empty string cells
                cell.value = '*' * len(cell.value)

    # Save the masked workbook
    wb.save(output_file)
    print(f"Masked data saved to {output_file}")

# Input file name
input_file = "input_data.xlsx"

# Output file name
output_file = "masked_data.xlsx"

# Columns to mask
columns_to_mask = ["Name", "Email", "Phone"]  # Replace with the columns you want to mask

# Header row (0-indexed; 1 means the second row)
header_row = 1

# Call the function
mask_excel_data_with_style(input_file, output_file, columns_to_mask, header_row)
